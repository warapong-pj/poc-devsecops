name: quality scan

on:
  push: {}

jobs:
  sast:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      # - uses: actions/setup-python@v6
      #   with:
      #     python-version: '3.10'
      - uses: actions/setup-java@v5
        with:
          distribution: 'adopt'
          java-version: '21'

      - run: |
          #!/bin/sh

          set -xe

          export SONAR_SCANNER_VERSION=7.2.0.5079
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH

          sonar-scanner -Dsonar.organization=warapong-pj -Dsonar.projectKey=warapong-pj_poc-devsecops -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      # - run: |
      #     #!/bin/sh

      #     set -xe

      #     mkdir -p $HOME/codeql-home
      #     git clone --recursive https://github.com/github/codeql.git $HOME/codeql-home/codeql-repo
      #     curl -fsSL https://github.com/github/codeql-cli-binaries/releases/download/v2.22.4/codeql-linux64.zip -o codeql-linux64.zip
      #     unzip -q codeql-linux64.zip -d $HOME/codeql-home
      #     rm codeql-linux64.zip
      #     export PATH=$PATH:$HOME/codeql-home/codeql
      #     pip install sarif-tools
      #     codeql database create --language=python codeql-db --source-root=.
      #     codeql database analyze codeql-db python-code-quality --format=sarif-latest --output=codeql.sarif
      #     sarif csv codeql.sarif
      #     cat codeql.csv

  # sca:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-java@v5
  #       with:
  #         distribution: 'adopt'
  #         java-version: '21'

  #     - run: |
  #         #!/bin/sh

  #         set -xe

  #         curl -fsSL https://github.com/dependency-check/DependencyCheck/releases/download/v12.1.3/dependency-check-12.1.3-release.zip -o dependency-check.zip
  #         unzip -q dependency-check.zip -d $HOME
  #         rm dependency-check.zip
  #         export PATH=$PATH:$HOME/dependency-check/bin
  #         dependency-check.sh --scan ./ --out ./dependency-check-report --enableExperimental --nvdApiKey ${{ secrets.NVD_API_TOKEN }}
  #         cat dependency-check-report/dependency-check-report.html